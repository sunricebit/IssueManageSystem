@model IMS.ViewModels.Post.Post


@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>Detail Post</h4>
<hr />

<div class="d-flex">
    <a asp-action="Index" class="btn btn-outline-success" style="height:fit-content">Back to List</a> |
    <p class="btn btn-outline-success" style="width:50px" onclick="toggleEditing()" >Edit</p>

</div>
<div class="row">
    <form asp-action="Edit" method="post" id="editForm">
        @Html.AntiForgeryToken()
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <div class="row align-items-stretch">
            <div class="col-md-6">
                <div class="form-group mb-4">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" readonly />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="form-group mb-4">
                    <label asp-for="CreatedAt" class="control-label"></label>
                    <input asp-for="CreatedAt" class="form-control" readonly />
                    <span asp-validation-for="CreatedAt" class="text-danger"></span>
                </div>

                <div class="form-group mb-4 form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsPublic" readonly /> @Html.DisplayNameFor(model => model.IsPublic)
                    </label>
                </div>

                <div class="form-group mb-md-0 mb-4">
                    <label asp-for="ImageUrl" class="control-label"></label>
                    <input asp-for="ImageUrl" class="form-control" readonly />
                    <span asp-validation-for="ImageUrl" class="text-danger"></span>
                </div>
                <div class="form-group mb-md-0 mb-4">
                    <label asp-for="Author" class="control-label">Author</label>
                    <input asp-for="Author" class="form-control" readonly />
                    <span asp-validation-for="Author" class="text-danger"></span>
                </div>
                <div class="form-group mb-md-0 mb-4">
                    <label asp-for="Category" class="control-label"> Category</label>
                    <input asp-for="Category" class="form-control"  readonly />
                    <span asp-validation-for="Category" class="text-danger"></span>
                </div>

            </div>
            <div class="col-md-6">

                <div class="form-group form-group-textarea mb-md-0" style="height:100%">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" style="height:400px" readonly></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
        </div>

        <button type="submit" value="Save" class="btn btn-outline-success" id="saveButton">Save</button>
    </form>

</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    var isEditing = true;
    document.getElementById('saveButton').style.display = 'none';
    function toggleEditing() {
        // Lấy tất cả các input trong form
        var formInputs = document.getElementById('editForm').querySelectorAll('input, select, textarea');

        // Nếu đang trong trạng thái chỉnh sửa, tắt readonly; ngược lại, bật readonly
        formInputs.forEach(function (input) {
            input.readOnly = !isEditing;
        });
        if (!isEditing) {
            document.getElementById('saveButton').style.display = 'none';
        } else {
            document.getElementById('saveButton').style.display = 'inline-block';
        }
        // Đảo ngược trạng thái chỉnh sửa
        isEditing = !isEditing;
    }
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
