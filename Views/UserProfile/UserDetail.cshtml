@model IMS.Models.User;
@*@{
        Layout = "~/Views/Shared/_TabBar.cshtml";
    }*@

<style>
    .popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        border: 1px solid #ccc;
        padding: 20px;
        background-color: #fff;
        z-index: 1;
        width: 450px;
    }

    .popup-content {
        /*text-align: center;*/
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover {
            color: black;
        }

    .avatar {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        border: 3px solid #000;
        overflow: hidden;
    }

        .avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .avatarAdd {
        width: 50px;
        height: 50px;
        overflow: hidden;
        margin-left: 35px;
        margin-top: 10px;
    }

        .avatarAdd img {
            width: 60%;
            object-fit: cover;
            border-radius: 50%;
        }

        .avatarAdd :hover {
            background-color: gray;
        }

    .active-color {
        background-color: green !important;
        color: #f8f9fa;
    }
</style>

<div>

<h3 class="text-h3 mb-4 mt-4">User detail</h3>
</div>


@if (Model.Avatar == null)
{
    <div class="avatar">
        <img src="~/img/avatarDemo.jpg" alt="Avatar">
    </div>
    <div class="avatarAdd">
        <img src="~/img/addAvatar.png" alt="Thumbnail" class="thumbnail" onclick="openPopup('popupAdd')">
    </div>

}
else
{
    <div class="avatar" style=" border: 1px solid #000;">
        <img src="@Html.DisplayFor(model => model.Avatar)" alt="Avatar" class="avatar" />

    </div>
    <div class="avatarAdd">
        <img src="~/img/editAvatar.png" alt="Thumbnail" class="thumbnail" onclick="openPopup('popupEdit')">
    </div>
}

<div>
    <hr />
    <div class="row" style="padding:10px">
        <a href="/change-password" style="padding-bottom: 16px">Password change</a>
        <form asp-action="EditUserProfile" id="form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" disabled />
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" id="Name" class="form-control" readonly />
                <span id="nameError" style="color:rgba(var(--bs-danger-rgb));" class="field-validation-error"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" id="Phone" class="form-control" readonly />
                <span id="phoneError" style="color:rgba(var(--bs-danger-rgb));" class="field-validation-error"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                @if (Model.Gender == true)
                {
                    <label><input asp-for="Gender" type="radio" value="true" checked disabled /> Male</label>
                    <label><input asp-for="Gender" type="radio" value="false" disabled /> Female</label>
                }
                else if (Model.Gender == null)
                {
                    <label><input asp-for="Gender" type="radio" value="true" disabled /> Male</label>
                    <label><input asp-for="Gender" type="radio" value="false" disabled /> Female</label>
                }
                else
                {
                    <label><input asp-for="Gender" type="radio" value="true" disabled /> Male</label>
                    <label><input asp-for="Gender" type="radio" value="false" checked disabled /> Female</label>
                }
            </div>
            <div class="form-group" style="float:right">
                <input style="background-color: #43A047;border-color: #43A047; height:40px;"
                       type="button" value="Edit" class="btn btn-primary" onclick="enableEdit()" />
                <input style="background-color: #43A047;border-color: #43A047; height:40px; display:none;"
                       type="button" value="Save" class="btn btn-primary" onclick="validateAndSubmit()" id="saveBtn" />
            </div>
        </form>
    </div>

</div>

<!-- Popup Add -->
<div class="modal" tabindex="-1" id="popupAdd" style="background-color:#2220208c">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Create avatar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closePopup('popupAdd')"></button>
            </div>
            <div class="modal-body">
                <!-- Nội dung của popup add -->
                @using (Html.BeginForm("CreateAvatar", "UserProfile", FormMethod.Post, new { enctype = "multipart/form-data", style = "display: flex;" }))
                {
                    @Html.HiddenFor(model => model.Id)

                    <label for="file">Choose Avatar:</label>
                    <input type="file" name="file" id="file" required />
                    <input type="submit" value="Create" style="background-color: #43A047;border-radius: 3px;" />
                }
            </div>
        </div>
    </div>
</div>

<!-- Popup Edit -->
<div class="modal" tabindex="-1" id="popupEdit" style="background-color:#2220208c">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Edit avatar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closePopup('popupEdit')"></button>
            </div>
            <!-- Nội dung của popup edit -->
            <div class="modal-body">
                <p>
                    @using (Html.BeginForm("UpdateAvatar", "UserProfile", FormMethod.Post, new { enctype = "multipart/form-data", style = "display: flex;" }))
                    {
                        @Html.HiddenFor(model => model.Id)

                        <label for="file">Update Avatar:</label>
                        <input type="file" name="file" id="file" required />
                        <input type="submit" value="Update" style="background-color: #43A047;border-radius: 3px;height: fit-content;" />
                    }
                </p>
                <p>
                    <label for="file">Delete Avatar:</label>
                    <input type="submit" value="Delete" onclick="openPopup('popupDelete')" style="background-color: #43A047;border-radius: 3px; margin-top:5px" />
                </p>
            </div>

        </div>
    </div>
</div>


<!---popupdelete--->
<div class="modal" tabindex="-1" id="popupDelete" style="background-color:#2220208c">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Confirm delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closePopup('popupDelete')"></button>
            </div>
            <!-- Nội dung của popup delete -->
            <div class="modal-body">
                Are you sure you want to delete this avatar?
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("DeleteAvatar", "UserProfile", FormMethod.Post))
                {
                    @Html.HiddenFor(model => model.Id)
                    <input type="submit" value="Yes" onclick="closePopup('popupDelete')" style="background-color: #43A047;border-radius: 3px; margin-top:5px" />
                }
                <input type="submit" value="No" onclick="closePopup('popupDelete')" style="background-color: #43A047;border-radius: 3px; margin-top:9px" />

            </div>
        </div>
    </div>
</div>

<script>var popup = document.getElementById('popupDeleteSuccess');
    popup.style.display = 'block';

    function openPopup(popupView) {
        var popup = document.getElementById(popupView);
        popup.style.display = 'block';
    }

    function closePopup(popupView) {
        var popup = document.getElementById(popupView);
        popup.style.display = 'none';
    }

    function validateAndSubmit() {
        // Lấy giá trị từ thẻ input
        var phoneInput = $("#Phone");
        var nameInput = $("#Name");
        var phoneError = $("#phoneError");
        var nameError = $("#nameError");

        // Reset trạng thái và thông báo lỗi trước mỗi lần kiểm tra
        phoneInput.removeClass("input-validation-error");
        nameInput.removeClass("input-validation-error");
        phoneError.text("");
        nameError.text("");

        // Lấy giá trị từ thẻ input
        var phoneValue = phoneInput.val();
        var nameValue = nameInput.val();

        // Biểu thức chính quy để kiểm tra số điện thoạ i (chỉ cho phép chữ số)
        var phoneRegex = /^0[0-9]{9}$/;

        // Kiểm tra

        if (!phoneRegex.test(phoneValue) && phoneValue != "") {
            // Hiển thị thông báo lỗi và đặt lỗi cho trường input
            phoneError.text("Invalid phone number, phone number has 10 digits and starts with 0.");
        }
        else if (nameValue == "") {
            nameError.text("Please enter a name.");
        }
        else {

            // Validation thành công, tiếp tục submit form
            document.forms["form"].submit();
            //$("form").submit/*();*/
        }
    }

    function enableEdit() {
        // Enable all readonly fields
        document.getElementById('Name').readOnly = false;
        document.getElementById('Phone').readOnly = false;
        document.getElementById('Address').readOnly = false;

        // Enable radio buttons
        var radioButtons = document.querySelectorAll('input[type=radio]');
        for (var i = 0; i < radioButtons.length; i++) {
            radioButtons[i].disabled = false;
        }

        // Show Save button and hide Edit button
        document.getElementById('saveBtn').style.display = 'inline-block';
        document.querySelector('input[value="Edit"]').style.display = 'none';
    }</script>

