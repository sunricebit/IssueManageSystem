@model AssignmentViewModel

@{
    Layout = "~/Views/Shared/SubjectDetailTab.cshtml";
    string? code = Context.Request.RouteValues["code"]?.ToString();
}


<div class="card p-4">
    <div class="mb-3">
        <div class="row align-items-end">
            <div class="col-md-12 text-end">
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    New Assignment
                </button>
            </div>

        </div>
    </div>

    <table style="border-width: 1px;  border-color: #e0e0e0" class="table table-bordered " id="sorttable-table">
        <thead class="thead-dark">
            <tr>
                <th>Name</th>
                <th>Weight</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @if (Model.Assignments.Count == 0)
            {
                <tr>
                    <td colspan=3>
                        <div class="text-secondary text-center">No item not found</div>
                    </td>
                </tr>
            }
            else
            {
                @foreach (var assignment in Model.Assignments)
                {
                    <tr>
                        <td>@assignment.Name</td>
                        <td>@assignment.Weight</td>
                        <td>@assignment.Description</td>
                        <td class="d-flex">
                            <a class="btn btn-link btn-sm" role="button" href="@Url.Action("AssignmentsActive", "Subject", new {code = code,  assignmentId = assignment.Id })">@(assignment.IsActive == true ? "Deactivate":"Activate")</a>
                            <button class="btn btn-link btn-sm" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal_@assignment.Id">Update</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    @foreach (var assignment in Model.Assignments)
    {
        <div class="modal fade" id="exampleModal_@assignment.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    @using (Html.BeginForm("UpdateAssignment", "Subject", new { code = Context.Request.RouteValues["code"] }, FormMethod.Post))
                    {
                        AssignmentViewModel2 vm = new AssignmentViewModel2()
                        {
                            Id = assignment.Id,
                            Name = assignment.Name,
                            Description = assignment.Description,
                            Weight = assignment.Weight
                        };

                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Update assignment</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            @Html.AntiForgeryToken()

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => assignment.Id, new { @class = "control-label mb-1" }) <span class="text-danger">*</span>
                                <input type="text" class="form-control" readonly id="name" asp-for="@vm.Id">
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => vm.Name, new { @class = "control-label mb-1" }) <span class="text-danger">*</span>
                                @Html.TextBoxFor(model => vm.Name, new { @class = "form-control", @id = "code" })
                                @Html.ValidationMessageFor(model => vm.Name, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => vm.Weight, new { @class = "control-label mb-1" }) <span class="text-danger">*</span>
                                @Html.TextBoxFor(model => vm.Weight, new { @class = "form-control", @id = "code" })
                                @Html.ValidationMessageFor(model => vm.Weight, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => vm.Description, new { @class = "control-label mb-1" })
                                @Html.TextAreaFor(model => vm.Description, new { @class = "form-control", @id = "name" })
                            </div>

                            @if (!string.IsNullOrEmpty(ViewBag.Error))
                            {
                                <div class="text-danger text-center mt-3">
                                    @ViewBag.Error
                                </div>
                            }

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    }


</div>



<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("Assignments", "Subject", FormMethod.Post))
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add assignment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Name, new { @class = "control-label mb-1" }) <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "code" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Weight, new { @class = "control-label mb-1" }) <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.Weight, new { @class = "form-control", @id = "code" })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Description, new { @class = "control-label mb-1" })
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id = "name" })
                    </div>


                    @if (!string.IsNullOrEmpty(ViewBag.Error))
                    {
                        <div class="text-danger text-center mt-3">
                            @ViewBag.Error
                        </div>
                    }

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            }
        </div>
    </div>
</div>
